version: 2.1

orbs:
  aws-cli: circleci/aws-cli@3.1

only-main-branch-filter: &only-main-branch-filter
  filters:
    branches:
      only:
        - main
        - /^.*testing-deploy.*$/
      ignore:
        - feature/*

executors:
#  sls-executor:
#    docker:
#      - image: serverless-framework/default
  java-executor:
    docker:
      - image: cimg/openjdk:21.0
#  aws-cli-executor:
#    docker:
#      - image: amazon/aws-cli
  base-executor:
    docker:
      - image: cimg/base:stable

commands:
  build-app-command:
    description: "Build authTokenLambdaFunction"
    steps:
      - run:
          name: Build
          command: gradle clean build -x test
      - run: ls -la build/libs/
      - persist_to_workspace:
          root: .
          paths:
            - build/libs/
      - run: ls -la build/libs/
  deploy-sls-command:
    steps:
      - run:
          name: Check STAGE Value
          command: echo "Deploying to STAGE=$STAGE"
      - run:
          name: Checking the JAR file exists
          command: ls -la build/libs/
      - run:
          name: Install serverless cli
          command: |
            curl -o- -L https://slss.io/install | bash
            echo "serverless version is: " serverless -v
            echo "list of profiles: "
            aws configure list-profiles
      - run:
          name: Export PACKAGE_NAME
          command: |
            echo 'export PACKAGE_NAME="${CIRCLE_PROJECT_REPONAME}-$(echo ${CIRCLE_SHA1} | cut -c1-8)"' >> $BASH_ENV
            source $BASH_ENV
            echo "Package name is: $PACKAGE_NAME"
      - run:
          name: Deploy
          command: sls deploy --stage $STAGE

#  install_tar_command:
#    steps:
#      - run:
#          name: Install tar
#          command: yum install -y tar

jobs:
  build-job:
    executor: java-executor
    steps:
      - checkout
      - build-app-command
  deploy-job:
    executor: base-executor
    steps:
      - checkout
#      - install_tar_command
      - attach_workspace:
          at: .
#      - aws-cli/setup
      - deploy-sls-command

workflows:
  version: 2
  build:
    jobs:
      - build-job
      - deploy-job:
          <<: *only-main-branch-filter
          requires:
            - build-job
          context:
            - aws-serverless-context
            - dev-context  # for prod this would be changed to prod-context and more job with dev-context for dev branch would be added

